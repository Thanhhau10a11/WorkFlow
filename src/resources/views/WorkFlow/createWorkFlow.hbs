<!-- views/createWorkflow.hbs -->
<div class="app-body-main-content">
    <div class="container">
        <div class="form-container">
            <h2>Tạo mới Workflow cho Nhóm: {{Group.GroupName}}</h2>
            <form id="workflowForm">
                <input type="hidden" id="groupId" value="{{Group.GroupID}}">

                <div class="form-group">
                    <label for="workflowName" class="required">Tên Workflow <span class="required-star">*</span></label>
                    <input type="text" class="form-control" id="workflowName" placeholder="Nhập tên workflow" required>
                </div>
                <div class="form-group">
                    <label for="workflowDescription">Mô tả Workflow</label>
                    <input type="text" class="form-control" id="workflowDescription" placeholder="Nhập mô tả">
                </div>
                <h5>Stages</h5>
                <div id="stagesContainer"></div>
                <div class="btn-container">
                    <button type="button" class="btn btn-secondary" id="addStageBtn">Thêm Stage</button>
                    <button type="button" class="btn btn-primary bg" id="saveWorkflowBtn">Lưu Workflow</button>
                </div>
            </form>
        </div>
    </div>
</div>


<style>
    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        margin: 0 auto;
    }

    .form-container {
        max-width: 800px;
        width: 100%;
        padding: 20px;
        background-color: #ffffff;
        border: 1px solid #ced4da;
        border-radius: 5px;
        display: flex;
        flex-direction: column;
    }

    .form-container h2 {
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 15px;
    }

    .form-row .col {
        flex: 1;
        margin-right: 15px;
    }

    .form-row .col:last-child {
        margin-right: 0;
    }

    .btn-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .btn-primary,
    .btn-secondary {
        margin-right: 10px;
    }

    .required-star {
        color: red;
        font-size: 1.2rem;
        margin-left: 5px;
    }

    .required {
        font-weight: bold;
    }

    .stage {
        border: 1px solid #ced4da;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 20px;
        background-color: #ffffff;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    }

    .job {
        border: 1px solid #ced4da;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 10px;
        background-color: #f8f9fa;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    }

    .recipient-field {
        display: none;
    }

    ..stageRecipient {
        border-radius: 0.25rem;
        border: 1px solid #ced4da;
        background-color: #ffffff;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .stageRecipient:focus {
        border-color: #80bdff;
        outline: 0;
        box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
    }

    .stageRecipient option {
        padding: 0.5rem;
    }

    .stageRecipient optgroup {
        font-weight: bold;
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        padding: 0.25rem 0;
    }
</style>

<script>
    $(document).ready(function () {
        let stageCount = 0;

        $('#addStageBtn').click(function () {
            stageCount++;
            const stageHtml = `  
            <div class="stage" data-stage-id="${stageCount}">  
                <h6>Stage ${stageCount}</h6>  
                <div class="form-row">  
                    <div class="col">  
                        <label for="stageName${stageCount}" class="required">Tên Stage <span class="required-star">*</span></label>  
                        <input type="text" class="form-control stageName" id="stageName${stageCount}" placeholder="Nhập tên stage" required>  
                    </div>  
                    <div class="col">  
                        <label for="stageDescription${stageCount}">Mô tả Stage</label>  
                        <input type="text" class="form-control stageDescription" id="stageDescription${stageCount}" placeholder="Nhập mô tả">  
                    </div>  
                </div>  
                <div class="form-row">  
                    <div class="col">  
                        <input type="checkbox" class="show-recipient" id="showRecipient${stageCount}">  
                        <label for="showRecipient${stageCount}">Chỉ định người nhận</label>  
                    </div>  
                </div>  
                <div class="form-row recipient-field" id="recipientField${stageCount}" style="display:none;">  
                    <div class="col">  
                        <label for="stageRecipient${stageCount}">Người nhận</label>  
                        <select class="form-control stageRecipient" id="stageRecipient${stageCount}">  
                            <option value="" class="display-center">Chọn người nhận trong group {{Group.GroupName}}</option>  
                            {{#each members}}  
                                {{!-- <optgroup label="{{this.GroupName}}">  
                                    {{#each this.Members}}  
                                        <option value="{{Username}}">{{Username}}</option>  
                                    {{/each}}  
                                </optgroup>   --}}
                                    <option value="{{Username}}">{{Username}}</option>  
                            {{/each}}  
                        </select>  
                    </div>  
                </div>  
            </div>  
        `;

            $('#stagesContainer').append(stageHtml);
        });

        $('#stagesContainer').on('change', '.show-recipient', function () {
            const recipientFieldId = `#recipientField${$(this).closest('.stage').data('stage-id')}`;
            $(recipientFieldId).slideToggle(this.checked);
        });

        $('#saveWorkflowBtn').click(async function () {
            const workflowName = $('#workflowName').val();
            const workflowDescription = $('#workflowDescription').val();
            const GroupID = $('#groupId').val();

            if (!workflowName) {
                showToast('Vui lòng nhập tên workflow.', true);
                return;
            }

            const stages = [];
            let valid = true;

            $('.stage').each(function () {
                const stageName = $(this).find('.stageName').val();
                const showRecipient = $(this).find('.show-recipient').is(':checked');
                const stageRecipient = showRecipient ? $(this).find('.stageRecipient').val() : null;

                if (!stageName) {
                    showToast('Vui lòng nhập tên cho tất cả các stage.', true);
                    valid = false;
                    return false;
                }

                stages.push({
                    name: stageName,
                    description: $(this).find('.stageDescription').val(),
                    recipient: stageRecipient,
                    approxTime: $(this).find('.stageApproxTime').val()
                });
            });

            if (!valid) return;

            stages.forEach((stage, index) => {
                if (index > 0) {
                    stage.previousStage = stages[index - 1].name;
                }
                if (index < stages.length - 1) {
                    stage.nextStage = stages[index + 1].name;
                }
            });

            try {
                const token = localStorage.getItem('authToken');
                const response = await fetch('/api/workFlow/saveWorkFLow', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        GroupID: GroupID,
                        name: workflowName,
                        description: workflowDescription,
                        stages: stages
                    })
                });

                if (response.ok) {

                    showToast('Workflow đã được lưu thành công!');
                    setTimeout(() => {
                        $('#workflowName').val('');
                        $('#workflowDescription').val('');
                        $('#stagesContainer').empty();
                        window.location.href = document.referrer;
                    }, 1000);
                } else {
                    const errorData = await response.json();
                    showToast(`Lỗi: ${errorData.error}`, true);
                }
            } catch (error) {
                showToast('Có lỗi xảy ra, vui lòng thử lại.', true);
            }
        });
    });
</script>